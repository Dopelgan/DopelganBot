<?php

namespace App\Services\TelegramStrategies;

use App\Services\TelegramService;
use App\Models\DutySchedule;
use Illuminate\Support\Carbon;

class DutyCommandStrategy implements TelegramStrategyInterface
{
    protected $telegramService;

    public function __construct(TelegramService $telegramService)
    {
        $this->telegramService = $telegramService;
    }

    public function handle($chatId, $text, $photo)
    {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        $now = Carbon::now()->addHours(3);

        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–∂—É—Ä—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤–∫–ª—é—á–∞—é—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        $dutySchedules = DutySchedule::where('start_at', '<=', $now)
            ->where('end_at', '>=', $now)
            ->with(['department', 'duty'])  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
            ->get();

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        $message = "<b>üìÖ –î–µ–∂—É—Ä–Ω—ã–µ —Å–µ–π—á–∞—Å:</b>\n\n";

        if ($dutySchedules->isEmpty()) {
            $message = "üìÖ –î–µ–∂—É—Ä–Ω—ã–µ —Å–µ–π—á–∞—Å:\n\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–∂—É—Ä—Å—Ç–≤.";
        } else {
            foreach ($dutySchedules as $dutySchedule) {
                $department = $dutySchedule->department;
                $duty = $dutySchedule->duty;

                $message .= "<b>" . ($department ? $department->name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ') .
                    "</b> - " .($duty ? $duty->name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π') . " " . ($duty ? $duty->contact : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') . "\n\n";
            }
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ TelegramService —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Markdown
        $this->telegramService->sendMessage($chatId, $message);
    }
}
